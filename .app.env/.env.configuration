NODE_ENV=production
NODE_DEBUG=false
# relative path from root folder
APP_ENV_CONFIG_DIST_FILE_PATH=./.env
APP_ENV_CONFIG_BUILD_FILE_PATH=./.app.env/.env.local.build
APP_ENV_CONFIG_ENCODING=utf8
APP_ENV_CONFIG_HANDLER_SEPARATOR=|
APP_ENV_CONFIG_VAR_WORD_SEPARATOR=_
# APP_EXAMPLE_ENV=~ this means null
APP_ENV_CONFIG_NULL=~
# APP_EXAMPLE_ENV=~~ this means undefined
APP_ENV_CONFIG_UNDEFINED=~~
# APP_EXAMPLE_ENV= # this means empty, possible values : undefined,null,empty
APP_ENV_CONFIG_EMPTY_BEHAVIOUR=empty
# process.env.APP_EXAMPLE_ENV is undefined we will put '' , possible values : undefined,null,empty
APP_ENV_CONFIG_UNDEFINED_BEHAVIOUR=empty
# process.env.APP_EXAMPLE_ENV is undefined we will put '' , possible values : undefined,null,empty
APP_ENV_CONFIG_NULL_BEHAVIOUR=empty
APP_ENV_CONFIG_INCLUDES_SEPARATOR=,
APP_ENV_CONFIG_EVAL_CONFIG_PREFIX=~
# when you try to embed a non string in a string default put '' , possible values : undefined,null,empty,error,allow
APP_ENV_CONFIG_EVAL_EMBED_NON_STRING=allow
# relative paths from root folder separated by 'APP_ENV_CONFIG_INCLUDES_SEPARATOR'
APP_ENV_CONFIG_FILE_INCLUDES_KEY=--includes
# used to include files after everything is loaded to overload values using environment variable APP_PROCESS_ENV_INCLUDES passed with the command separated by APP_ENV_CONFIG_INCLUDES_SEPARATOR
APP_ENV_CONFIG_NODE_ENV_INCLUDE=APP_NODE_ENV_INCLUDE
APP_ENV_CONFIG_PROCESS_ENV_EVAL_PREFIX=process.env
APP_ENV_CONFIG_APP_ENV_EVAL_PREFIX=app.env
APP_ENV_CONFIG_APP_ENV_HANDLER_PREFIX=app.environment.
APP_ENV_CONFIG_ENV_EVAL_SEPARATOR=::
# possible prefixes for now : processor, formatter, validator
# any kind of handler .js need to export a function that takes value, defaultValue, options as parameters app.environment.processor.new-processor::valuexxxx
# the path needs to be relative to where you launched the script (usually from project root)
# example : processor::jsonp::./src/dot-env/jsonp-processor.js
APP_ENV_CONFIG_HANDLERS_OVERRIDE=
APP_ENV_CONFIG_HANDLERS_OVERRIDE_PREFIX_SEPARATOR=::
APP_ENV_CONFIG_HANDLERS_OVERRIDE_SEPARATOR=,
# used to include files after everything is loaded to overload values using environment variable APP_PROCESS_ENV_INCLUDES passed with the command separated by APP_ENV_CONFIG_INCLUDES_SEPARATOR
APP_ENV_CONFIG_PROCESS_FILE_INCLUDES_KEY=APP_PROCESS_ENV_INCLUDES
--includes=./.app.env/.env.configuration.local,./.app.env/.env.configuration.${app.env::NODE_ENV}

# this will get another env var ${XXXX} ${XXXX~defaultValue} ${XXXX~app.env::DEFAULT_VALUE} ${XXXX~process.env::DEFAULT_VALUE}
# to access system env var ${process.env::XXXX} ${process.env::XXXX~defaultValue} ${process.env::XXXX~ANOTHER_APP_ENV_VAR}
# to access another app env var ${app.env::XXXX} ${app.env::XXXX~defaultValue} ${app.env::XXXX~process.env::ANOTHER_APP_ENV_VAR}
